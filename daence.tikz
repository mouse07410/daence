% -*- Mode: LaTeX -*-

\begin{tikzpicture}

\usetikzlibrary{calc}
\usetikzlibrary{fit}
\usetikzlibrary{shapes}

\input{palette.def}
\colorlet{prf}{Vermillion}
\colorlet{cipher}{Blue}

% Nodes representing data.
\tikzset{datum/.style={
    shape=rectangle,
    rounded corners=0.5ex,
    minimum height=4ex,
}}

% Nodes representing operations on data.
\tikzset{operation/.style={
    shape=trapezium,
    trapezium left angle=-65,
    trapezium right angle=-65,
    minimum height=4ex,
}}

% Nodes representing an xor operation.
\tikzset{xor/.style={
    circle,
    append after command={
      [shorten >=\pgflinewidth, shorten <=\pgflinewidth]
      (\tikzlastnode.north) edge (\tikzlastnode.south)
      (\tikzlastnode.east) edge (\tikzlastnode.west)
    },
}}

% Nodes grouping collections of nodes together.
\tikzset{grouping/.style={
    rectangle, rounded corners, thick, inner sep=1em
}}

\def\Poly#1/{\operatorname{\textsc{Poly#1}}}
\def\XSalsa#1/{\operatorname{\textsc{XSalsa#1}}}
\def\HXSalsa#1/{\operatorname{\textsc{HXSalsa#1}}}

% Inputs
\node (a) at (-2.5, 3) [draw, datum, minimum width=5em] {$a$};
\node (m) at ( 5,   3) [draw, datum, minimum width=10em] {$m$};

% Outputs
\node (t) at (-2,  -3) [draw, datum, minimum width=2em] {$t$};
\node (c) at ( 5,  -3) [draw, datum, minimum width=10em] {$c$};

% PRF
\node (poly1305)  at (-2, 0.75) [draw, operation]
  {$\Poly1305/^2_{k_1,\dotsc,k_4}$};
 \coordinate (poly1305-ad) at ($(poly1305.north) - (1/2,0)$);
 \coordinate (poly1305-msg) at ($(poly1305.north) + (1/2,0)$);
 \coordinate (poly1305-hash) at (poly1305.south);
\node (hxsalsa20) at (-2,-0.75) [draw, operation]
  {$\HXSalsa20/^{\vphantom{k_0}}_{k_0}$};
 \coordinate (hxsalsa20-input) at (hxsalsa20.north);
 \coordinate (hxsalsa20-output) at (hxsalsa20.south);
\node (prf) [draw, grouping, dashed, color=prf, fit=(poly1305) (hxsalsa20)]
  {};
  \node at (prf.south west) [color=prf, anchor=north west]
    {\textbf{PRF}};

% Randomized cipher
\node (xsalsa20)  at ( 2.5, 0) [draw, operation]
  {$\XSalsa20/^{\vphantom{k_0}}_{k_0}$};
 \coordinate (xsalsa20-input) at (xsalsa20.north);
 \coordinate (xsalsa20-output) at (xsalsa20.south);
\node (xor)       at ( 5,  -1) [draw, xor, scale=2] {};
\node (cipher) [draw, grouping, dotted, color=cipher, fit=(xsalsa20) (xor)] {};
  \node at (cipher.south west) [color=cipher, anchor=north west, align=left]
    {\textbf{Randomized cipher}};

% Hash inputs into authentication tag
\draw[->] (a) -- (poly1305-ad);
\draw[->] (m) |- ($(poly1305-msg) + (0,2/3)$) -- (poly1305-msg);

\draw[->] (poly1305-hash) -- (hxsalsa20-input);
\draw[->] (hxsalsa20-output) -- (t);

% Snake the line from t into XSalsa20 along a vertical line placed
% evenly between the two major components.
\draw[->]
  let \p1 = ($(hxsalsa20-output) !1/2! (t.north)$) in
  let \p2 = ($(prf.north east) !1/2! (cipher.north west)$) in
    (hxsalsa20-output) -| (\x1,\y1) -| (\x2,1) -| (xsalsa20-input);

% Encrypt message with pad derived from authentication tag
\draw[->] (xsalsa20-output) |- (xor);
\draw[->] (m) -- (xor);
\draw[->] (xor.south) -- (c.north);

\end{tikzpicture}
